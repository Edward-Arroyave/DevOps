name: Validate Commit Messages

on:
  pull_request:
    types: [opened, edited, synchronize]
  push:
    branches:
      - main

jobs:
  commit-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install CommitLint
        run: npm install --save-dev @commitlint/config-conventional @commitlint/cli

      - name: Configure CommitLint
        run: |
          echo "module.exports = {
            extends: ['@commitlint/config-conventional']
          };" > commitlint.config.js

      - name: Fetch all history for commit validation
        run: git fetch --prune --unshallow

      - name: Validate commit messages
        run: npx commitlint --from=origin/main --to=HEAD --verbose

      - name: Block commit if invalid
        if: failure()
        run: |
          echo "Commit message does not follow the required format. Must contain one of the allowed Git verbs."
          exit 1

      - name: Create GitHub Issue on Failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_TITLE="üö® Commit Inv√°lido Detectado"
          ISSUE_BODY="Se detect√≥ un commit inv√°lido en el repositorio. \n\n **Usuario:** ${{ github.actor }} \n **Commit:** $(git log -1 --pretty=format:'%s') \n **Hash:** $(git log -1 --pretty=format:'%H') \n\nPor favor, revisa el mensaje y sigue el formato correcto."
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues \
          -d "{\"title\": \"$ISSUE_TITLE\", \"body\": \"$ISSUE_BODY\", \"labels\": [\"üö® Commit Inv√°lido\", \"‚ùå Error\", \"issue_type: commit-validation\"]}"
