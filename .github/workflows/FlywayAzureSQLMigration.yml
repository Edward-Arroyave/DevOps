name: Flyway Azure SQL Migrations

on:
  push:
    branches: [main, test, demo, dev]
  workflow_dispatch:

concurrency:
  group: flyway-migrations-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-migrations:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          sudo apt-get install -y jq
          FLYWAY_VERSION=11.3.2
          curl -sL https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/$FLYWAY_VERSION/flyway-commandline-$FLYWAY_VERSION-linux-x64.tar.gz -o flyway.tar.gz
          tar -xzf flyway.tar.gz
          echo "$(pwd)/flyway-$FLYWAY_VERSION" >> $GITHUB_PATH

      - name: Configure Environment Variables
        id: set-env
        run: |
          case "${{ github.ref_name }}" in
            "main") ENV_SUFFIX="PROD";;
            "dev") ENV_SUFFIX="DEV";;
            "demo") ENV_SUFFIX="DEMO";;
            "test") ENV_SUFFIX="TEST";;
            *) echo "::error::Branch no configurada"; exit 1;;
          esac
          echo "FLYWAY_URL=${{ secrets.FLYWAY_URL_PROD }}" | sed "s/PROD/$ENV_SUFFIX/g" >> $GITHUB_ENV
          echo "FLYWAY_USER=${{ secrets.FLYWAY_USER_PROD }}" | sed "s/PROD/$ENV_SUFFIX/g" >> $GITHUB_ENV
          echo "FLYWAY_PASSWORD=${{ secrets.FLYWAY_PASSWORD_PROD }}" | sed "s/PROD/$ENV_SUFFIX/g" >> $GITHUB_ENV

      - name: Execute Migrations
        run: |
          LOG_FILE="./Live_Lis_Flyway/flyway_$(date +%Y%m%d%H%M%S).log"
          EXIT_CODE=0
          
          flyway migrate \
            -configFiles=./Live_Lis_Flyway/flyway.toml \
            -url="$FLYWAY_URL" \
            -user="$FLYWAY_USER" \
            -password="$FLYWAY_PASSWORD" \
            -X \
            -locations="filesystem:./Live_Lis_Flyway/migrations" \
            -logFile="$LOG_FILE" || EXIT_CODE=$?

          if [ $EXIT_CODE -ne 0 ]; then
            mkdir -p error_logs
            if [ -f "$LOG_FILE" ]; then
              tail -n 50 "$LOG_FILE" > flyway_error.log
            else
              echo "Log no encontrado: $LOG_FILE" > flyway_error.log
              flyway -url="$FLYWAY_URL" -user="$FLYWAY_USER" -password="$FLYWAY_PASSWORD" info >> flyway_error.log
            fi
            exit $EXIT_CODE
          fi

      - name: Create Error Issue
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extracción de metadatos mejorada
          SERVER=$(echo "$FLYWAY_URL" | awk -F'//|;' '{print $2}' | cut -d'.' -f1)
          DATABASE=$(echo "$FLYWAY_URL" | awk -F'databaseName=' '{print $2}' | cut -d';' -f1)
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          # Clasificación de errores
          if grep -q "No locations configured" flyway_error.log; then
            FAILED_COMPONENT="flyway.toml"
            ERROR_TYPE="configuration"
          else
            FAILED_COMPONENT=$(grep -oP '\b(V|R)__\K[^.]+' flyway_error.log | tail -n1 || echo "unknown")
            ERROR_TYPE="migration"
          fi

          # Crear payload usando heredoc
          read -r -d '' JSON_PAYLOAD <<EOF
          {
            "title": "[${SERVER^^}] ${ERROR_TYPE^} Error - ${FAILED_COMPONENT##*/}",
            "body": "## Flyway Migration Error Report\n\n**Tipo:** \`${ERROR_TYPE}\`\\n**Entorno:** \`${{ github.ref_name }}\`\\n**Servidor:** \`${SERVER}.database.windows.net\`\\n**Base de Datos:** \`${DATABASE}\`\\n**Commit:** [\`${GITHUB_SHA:0:7}\`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})\\n\\n### Logs\\n\\\`\\\`\\\`\\n$(tail -n 30 flyway_error.log)\\n\\\`\\\`\\\`",
            "assignees": ["Edward-Arroyave"],
            "labels": ["flyway-error", "env:${{ github.ref_name }}"]
          }
          EOF

          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues" \
            -d "$JSON_PAYLOAD"
