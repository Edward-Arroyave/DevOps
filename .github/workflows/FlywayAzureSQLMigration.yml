name: Flyway Azure SQL Migrations

on:
  push:
    branches: [main, test, demo, dev]
  workflow_dispatch:

concurrency:
  group: flyway-migrations-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-migrations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine Environment
        id: env
        run: |
          case "${{ github.ref_name }}" in
            "main") ENV="PROD";;
            "dev") ENV="DEV";;
            "demo") ENV="DEMO";;
            "test") ENV="TEST";;
            *) echo "::error::Branch no configurada: ${{ github.ref_name }}"; exit 1;;
          esac
          echo "env=$ENV" >> $GITHUB_OUTPUT

      - name: Run Flyway Migrations
        run: |
          docker run --rm \
            -v $(pwd)/Live_Lis_Flyway:/flyway/Live_Lis_Flyway \
            redgate/flyway:latest-alpine \
            migrate \
            -url="${{ secrets[format('FLYWAY_URL_{0}', steps.env.outputs.env)] }}" \
            -user="${{ secrets[format('FLYWAY_USER_{0}', steps.env.outputs.env)] }}" \
            -password="${{ secrets[format('FLYWAY_PASSWORD_{0}', steps.env.outputs.env)] }}" \
            -locations="filesystem:/flyway/Live_Lis_Flyway/migrations" \
            -configFiles=/flyway/Live_Lis_Flyway/flyway.toml \
            -X \
            -logFile="/flyway/flyway_${{ github.run_id }}.log" || {
              echo "::error::Error en migraci√≥n"
              exit 1
            }
          # Copiar el log al host para usarlo en pasos posteriores
          docker cp $(docker ps -lq):/flyway/flyway_${{ github.run_id }}.log ./flyway_${{ github.run_id }}.log

      - name: Upload Log on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: flyway-error-log
          path: ./flyway_${{ github.run_id }}.log

      - name: Create GitHub Issue on Failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LOG_FILE="./flyway_${{ github.run_id }}.log"
          SERVER=$(echo "${{ secrets[format('FLYWAY_URL_{0}', steps.env.outputs.env)] }}" | awk -F'//' '{split($2,a,";"); print a[1]}' | cut -d'.' -f1)
          DATABASE=$(echo "${{ secrets[format('FLYWAY_URL_{0}', steps.env.outputs.env)] }}" | awk -F'databaseName=' '{print $2}' | cut -d';' -f1)

          # Valores por defecto
          SERVER=${SERVER:-"extraccion-fallida"}
          DATABASE=${DATABASE:-"base-de-datos-no-detectada"}

          # An√°lisis del log
          if grep -q "No locations configured" "$LOG_FILE"; then
            FAILED_SCRIPT="Configuraci√≥n de Flyway (flyway.toml)"
            ERROR_TYPE="‚ö†Ô∏è Error de Configuraci√≥n"
            ACTION="Verificar 'locations' en flyway.toml"
            LOG_LINK="https://github.com/${{ github.repository }}/blob/${{ github.sha }}/Live_Lis_Flyway/flyway.toml"
          else
            FAILED_SCRIPT=$(grep -oE '\b(V|R)__[A-Za-z0-9_]+\.sql\b' "$LOG_FILE" | tail -n1 || echo "Archivo no identificado")
            ERROR_TYPE="üö® Error de Migraci√≥n"
            ACTION="Revisar script: [${FAILED_SCRIPT}](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/Live_Lis_Flyway/migrations/${FAILED_SCRIPT})"
            LOG_LINK="https://github.com/${{ github.repository }}/runs/${{ github.run_id }}"
          fi

          FAILED_SCRIPT=${FAILED_SCRIPT:-"error-desconocido-$(date +%s)"}

          BODY="## ${ERROR_TYPE} en ${DATABASE}
          **Detalles T√©cnicos:**
          ‚ñ∏ Entorno: ${{ steps.env.outputs.env }}
          ‚ñ∏ Servidor SQL: ${SERVER}.database.windows.net
          ‚ñ∏ Recurso Fallido: ${FAILED_SCRIPT}
          ‚ñ∏ Commit: [${{ github.sha:0:7}}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          ‚ñ∏ [Log de Ejecuci√≥n](${LOG_LINK})
          **Acci√≥n Requerida:** ${ACTION}"

          gh issue create \
            --title "[${SERVER^^}] ${ERROR_TYPE} - ${FAILED_SCRIPT##*/}" \
            --body "$BODY" \
            --assignee "${{ github.actor }}" \
            --label "error-db,urgente"
