name: Flyway Azure SQL Migrations

on:
  push:
    branches: [main, test, demo, dev]
  workflow_dispatch:

concurrency:
  group: flyway-migrations-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-migrations:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flyway
        run: |
          FLYWAY_VERSION=11.3.2
          curl -sL https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/$FLYWAY_VERSION/flyway-commandline-$FLYWAY_VERSION-linux-x64.tar.gz -o flyway.tar.gz
          tar -xzf flyway.tar.gz
          echo "$(pwd)/flyway-$FLYWAY_VERSION" >> $GITHUB_PATH

      - name: Configure Environment
        run: |
          case "${{ github.ref_name }}" in
            "main")
              echo "FLYWAY_URL=${{ secrets.FLYWAY_URL_PROD }}" >> $GITHUB_ENV
              echo "FLYWAY_USER=${{ secrets.FLYWAY_USER_PROD }}" >> $GITHUB_ENV
              echo "FLYWAY_PASSWORD=${{ secrets.FLYWAY_PASSWORD_PROD }}" >> $GITHUB_ENV
              ;;
            "dev")
              echo "FLYWAY_URL=${{ secrets.FLYWAY_URL_DEV }}" >> $GITHUB_ENV
              echo "FLYWAY_USER=${{ secrets.FLYWAY_USER_DEV }}" >> $GITHUB_ENV
              echo "FLYWAY_PASSWORD=${{ secrets.FLYWAY_PASSWORD_DEV }}" >> $GITHUB_ENV
              ;;
            "demo")
              echo "FLYWAY_URL=${{ secrets.FLYWAY_URL_DEMO }}" >> $GITHUB_ENV
              echo "FLYWAY_USER=${{ secrets.FLYWAY_USER_DEMO }}" >> $GITHUB_ENV
              echo "FLYWAY_PASSWORD=${{ secrets.FLYWAY_PASSWORD_DEMO }}" >> $GITHUB_ENV
              ;;
            "test")
              echo "FLYWAY_URL=${{ secrets.FLYWAY_URL_TEST }}" >> $GITHUB_ENV
              echo "FLYWAY_USER=${{ secrets.FLYWAY_USER_TEST }}" >> $GITHUB_ENV
              echo "FLYWAY_PASSWORD=${{ secrets.FLYWAY_PASSWORD_TEST }}" >> $GITHUB_ENV
              ;;
            *)
              echo "::error::Branch no configurada"
              exit 1
              ;;
          esac

      - name: Execute Migrations
        run: |
          LOG_FILE="./Live_Lis_Flyway/flyway_$(date +%Y%m%d%H%M%S).log"
          EXIT_CODE=0
          
          flyway migrate \
            -configFiles=./Live_Lis_Flyway/flyway.toml \
            -url="$FLYWAY_URL" \
            -user="$FLYWAY_USER" \
            -password="$FLYWAY_PASSWORD" \
            -X \
            -locations="filesystem:./Live_Lis_Flyway/migrations" \
            -logFile="$LOG_FILE" || EXIT_CODE=$?

          if [ $EXIT_CODE -ne 0 ]; then
            mkdir -p error_logs
            if [ -f "$LOG_FILE" ]; then
              tail -n 30 "$LOG_FILE" > flyway_error.log
            else
              flyway -url="$FLYWAY_URL" -user="$FLYWAY_USER" -password="$FLYWAY_PASSWORD" info > flyway_error.log
            fi
            exit $EXIT_CODE
          fi

      - name: Create Error Issue
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extracción de metadatos
          SERVER=$(awk -F'//|;' '{print $2}' <<< "$FLYWAY_URL" | cut -d'.' -f1)
          DATABASE=$(awk -F'databaseName=' '{print $2}' <<< "$FLYWAY_URL" | cut -d';' -f1)
          
          # Clasificación de errores
          if grep -q "No locations configured" flyway_error.log; then
            FAILED_COMPONENT="flyway.toml"
            ERROR_TYPE="Configuración"
          else
            FAILED_COMPONENT=$(grep -oP '\b(V|R)__\K[^.]+' flyway_error.log | tail -n1 || echo "Desconocido")
            ERROR_TYPE="Migración"
          fi

          # Construir cuerpo del issue
          read -r -d '' BODY <<EOF
          ## 🚨 Error de ${ERROR_TYPE} en ${DATABASE}
          
          **Detalles técnicos:**
          - Entorno: \`${{ github.ref_name }}\`
          - Servidor: \`${SERVER}.database.windows.net\`
          - Recurso fallido: \`${FAILED_COMPONENT}\`
          - Commit: [${GITHUB_SHA:0:7}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          
          ### Logs de error
          \`\`\`
          $(tail -n 30 flyway_error.log)
          \`\`\`
          EOF

          # Crear issue
          gh issue create \
            --title "[${SERVER^^}] Error ${ERROR_TYPE} - ${FAILED_COMPONENT##*/}" \
            --body "$BODY" \
            --assignee "Edward-Arroyave" \
            --label "error-db,urgente,env:${{ github.ref_name }}"
